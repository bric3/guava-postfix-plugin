<idea-plugin version="2">
  <id>uk.co.drache.intellij.guavaPostfixCompletion</id>
  <name>Guava Postfix Completion</name>
  <version>1.0.0</version>
  <vendor email="rob@drache.co.uk" url="https://github.com/ukcrpb6/guava-postfix-plugin">Drache</vendor>

  <description><![CDATA[
      Postfix completion templates for guava

      <b>Available templates:</b><br/><br/>

      <ul>
        <li> <b>.checkArgument</b> - <b>.ca</b> – Checks that the boolean is true – <b>checkArgument(expr)</b></li>
        <li> <b>.checkNotNull</b> - <b>.cnn</b> – Checks that the value is not null – <b>checkNotNull(expr)</b></li>
        <li> <b>.checkState</b> - <b>.cs</b> – Checks some state of the object, not dependent on the method arguments – <b>checkState(expr)</b></li>
        <li> <b>.checkElementIndex</b> – Checks that index is a valid element index into a list, string, or array with the specified size – <b>checkElementIndex(index, size)</b></li>
        <li> <b>.checkPositionIndex</b> – Checks that index is a valid position index into a list, string, or array with the specified size  – <b>checkPositionIndex(index, size)</b></li>
        <li> <b>.checkPositionIndexes</b> – Checks that [start, end) is a valid sub range of a list, string, or array with the specified size – <b>checkPositionIndexes(start, end, size)</b></li>
      </ul>

      <ul>
        <li> <b>.join</b> - Joins pieces of text (specified as an array, Iterable, varargs or even a Map) with a separator – <b>Joiner.on(',').join(iterable)</b></li>
        <li> <b>.split</b> - Extracts non-overlapping substrings from an input string, typically by recognizing appearances of a separator sequence – <b>Splitter.on(',').split(charsequence)</b></li>
      </ul>

      <ul>
        <li> <b>.immutableListCopyOf</b> - Creates an immutable list containing the given elements, in order – <b>ImmutableList.copyOf(Array|Collection|Iterator|Iterable)</b></li>
        <li> <b>.immutableListOf</b> -  Creates an immutable list containing a single element – <b>ImmutableList.of(Object)</b></li>
        <li> <b>.immutableSetCopyOf</b> - Creates an immutable set containing the given elements, in order – <b>ImmutableSet.copyOf(Array|Collection|Iterator|Iterable)</b></li>
        <li> <b>.immutableSetOf</b> - Creates an immutable set containing a single element – <b>ImmutableSet.of(Object)</b></li>
      </ul>

      <ul>
        <li> <b>.fluentIterable</b> - Creates a fluent iterable that wraps iterable, or iterable itself if it is already a FluentIterable – <b>FluentIterable.from(Iterable)</b></li>
      </ul>
    ]]></description>

  <change-notes><![CDATA[
      * Initial release
  ]]></change-notes>

  <!-- please see http://confluence.jetbrains.com/display/IDEADEV/Build+Number+Ranges for description -->
  <idea-version since-build="131"/>

  <!-- please see http://confluence.jetbrains.com/display/IDEADEV/Plugin+Compatibility+with+IntelliJ+Platform+Products
       on how to target different products -->
  <!-- uncomment to enable plugin in all products -->
  <depends>com.intellij.modules.lang</depends>
  <depends>com.intellij.modules.java</depends>

  <extensions defaultExtensionNs="com.intellij">
    <postfixTemplate implementation="uk.co.drache.intellij.codeinsight.postfix.templates.CheckArgumentPostfixTemplate"/>
    <postfixTemplate implementation="uk.co.drache.intellij.codeinsight.postfix.templates.CheckNotNullPostfixTemplate"/>
    <postfixTemplate implementation="uk.co.drache.intellij.codeinsight.postfix.templates.CheckStatePostfixTemplate"/>
    <postfixTemplate implementation="uk.co.drache.intellij.codeinsight.postfix.templates.CheckElementIndexPostfixTemplate"/>
    <postfixTemplate implementation="uk.co.drache.intellij.codeinsight.postfix.templates.CheckPositionIndexPostfixTemplate"/>
    <postfixTemplate implementation="uk.co.drache.intellij.codeinsight.postfix.templates.CheckPositionIndexesPostfixTemplate"/>
    <postfixTemplate implementation="uk.co.drache.intellij.codeinsight.postfix.templates.SplitterPostfixTemplate"/>
    <postfixTemplate implementation="uk.co.drache.intellij.codeinsight.postfix.templates.JoinerPostfixTemplate"/>
    <postfixTemplate implementation="uk.co.drache.intellij.codeinsight.postfix.templates.ImmutableListCopyOfPostfixTemplate"/>
    <postfixTemplate implementation="uk.co.drache.intellij.codeinsight.postfix.templates.ImmutableListOfPostfixTemplate"/>
    <postfixTemplate implementation="uk.co.drache.intellij.codeinsight.postfix.templates.ImmutableSetCopyOfPostfixTemplate"/>
    <postfixTemplate implementation="uk.co.drache.intellij.codeinsight.postfix.templates.ImmutableSetOfPostfixTemplate"/>
    <postfixTemplate implementation="uk.co.drache.intellij.codeinsight.postfix.templates.FluentIterablePostfixTemplate"/>
  </extensions>

</idea-plugin>